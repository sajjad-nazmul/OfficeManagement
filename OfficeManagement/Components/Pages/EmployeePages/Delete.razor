@page "/employees/delete"
@using Microsoft.EntityFrameworkCore
@using OfficeManagement.Data
@inject ApplicationDbContext context
@inject NavigationManager NavigationManager
@using Microsoft.Extensions.Localization
@using OfficeManagement.Locales;

@inject IStringLocalizer<Resource> localizer

<PageTitle>@localizer["Delete"]</PageTitle>

<h1>@localizer["Delete"]</h1>

<p>@localizer["Are you sure you want to delete this?"]</p>
<div>
    <h2>@localizer["Employee"]</h2>
    <hr />
    @if (employee is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">@localizer["First Name"]</dt>
            <dd class="col-sm-10">@employee.FirstName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">@localizer["Last Name"]</dt>
            <dd class="col-sm-10">@employee.LastName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">@localizer["Department"]</dt>
            <dd class="col-sm-10">@employee.Department</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">@localizer["Hire Date"]</dt>
            <dd class="col-sm-10">@employee.HireDate</dd>
        </dl>
        <EditForm method="post" Model="employee" OnValidSubmit="DeleteEmployee" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(employee is null)">@localizer["Delete"]</button> |
            <a href="/employees">@localizer["Back to List"]</a>
        </EditForm>
    }
</div>

@code {
    private Employee? employee;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        employee = await context.Employees.FirstOrDefaultAsync(m => m.Id == Id);

        if (employee is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteEmployee()
    {
        context.Employees.Remove(employee!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/employees");
    }
}
